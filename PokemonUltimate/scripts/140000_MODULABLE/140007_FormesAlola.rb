module POKEMON_S
  class Pokemon
     
    def alt_movepool_list
      list = []
      #--------------------------------------------------
      #---------- Definir les movepools ici -------------
      #--------------------------------------------------
      # Modification des movepool selon la forme
      # CT basées sur la 7G, à modifier selon votre projet
      # CS non programmées vu que basé sur la 7G, cf. plus bas pour l'ajout des CS
      # Si l'ID de l'attaque est supérieur ou égal à 562 : Attaques 6-7G
      # Ces attaques sont précisées entre parenthèse pour pouvoir être supprimées si besoin
      # Liste des attaques 6-7G (pour faire ctrl+F) : 565, 566, 567, 568, 572, 574, 575, 579, 580, 586, 588, 589, 591, 595, 600, 603, 606, 609, 630, 365, 653, 654, 663, 665, 667
      # Pour ajouter une forme, cf. les exemples plus bas
      #--------------------------------------------------

      #-----------------
      # Formes d'Alola
      #-----------------

      # Rattata d'Alola
        list.push([19, 1, [ [33, 1], [39, 1], [98, 4], [116, 7], [44, 10], [228, 13], [158, 16], [372, 19], [242, 22], [389, 25], [162, 28], [38, 31], [283, 34] ],[ 6, 10, 11, 12, 13, 14, 17, 18, 27, 30, 32, 36, 42, 44, 45, 46, 48, 60, 63, 65, 86, 87, 88, 89, 90, 95, 97, 100 ],[ 256, 253, 154, 179, 382, 415, 68, 289, 254, 560, 279 ]]) 
      # Rattatac d'Alola
       list.push([20, 1, [ [184, 1], [14, 1], [33, 1], [39, 1], [98, 1], [116, 1], [98, 4], [116, 7], [44, 10], [228, 13], [158, 16], [372, 19], [242, 24], [389, 29], [162, 34], [38, 39], [283, 44] ],[ 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 21, 24, 25, 27, 30, 32, 34, 36, 41, 42, 44, 45, 46, 48, 57, 60, 63, 65, 68, 75, 86, 87, 88, 89, 90, 93, 95, 97, 100 ],[ 256, 253, 154, 179, 382, 415, 68, 289, 254, 560, 279 ]])
      # Raichu d'Alola (654, 565, 580)
       list.push([26, 1, [ [94, 1], [654, 1], [98, 1], [85, 1], [84, 1], [39, 1] ],[ 3, 4, 6, 10, 15, 16, 17, 18, 20, 21, 24, 25, 27, 29, 31, 32, 33, 42, 44, 45, 46, 48, 49, 52, 56, 57, 68, 72, 73, 86, 87, 88, 90, 93, 100 ],[ 381, 252, 217, 565, 268, 321, 179, 227, 175, 518, 117, 9, 203, 3, 273, 580 ]])
      # Sabelette d'Alola
       list.push([27, 1, [ [10, 1], [111, 1], [117, 3], [181, 5], [301, 7], [229, 9], [210, 11], [232, 14], [129, 17], [154, 20], [334, 23], [163, 26], [442, 30], [360, 34], [14, 38], [258, 42], [59, 46] ],[ 1, 6, 7, 10, 11, 14, 17, 20, 21, 26, 27, 28, 31, 32, 40, 42, 44, 45, 46, 48, 56, 65, 70, 74, 75, 78, 79, 80, 81, 84, 87, 88, 90, 100 ],[ 133, 532, 519, 306, 232, 174, 68, 333, 203, 400, 470 ]])
      # Sablaireau d'Alola
       list.push([28, 1, [ [368, 1], [519, 1], [163, 1], [301, 1], [232, 1], [111, 1], [333, 1] ],[ 1, 6, 7, 10, 11, 14, 15, 17, 20, 21, 26, 27, 28, 31, 32, 40, 42, 44, 46, 48, 52, 56, 65 ],[ 133, 532, 519, 306, 232, 174, 68, 333, 203, 400, 470 ]])
      # Goupix d'Alola (566, 595, 574)
       list.push([37, 1, [ [181, 1], [39, 4], [46, 7], [566, 9], [420, 10], [109, 12], [196, 15], [371, 18], [54, 20], [185, 23], [485, 26], [62, 28], [326, 31], [219, 34], [58, 36], [286, 39], [59, 42], [288, 44], [445, 47], [329, 50] ],[ 5, 6, 7, 10, 13, 14, 17, 18, 20, 21, 27, 32, 42, 44, 45, 48, 66, 70, 77, 79, 87, 88, 90, 97, 100 ],[ 204, 180, 227, 50, 326, 175, 190, 336, 97, 95, 595, 384, 574 ]])
      # Feunard d'Alola (572, 595, 574)
       list.push([38, 1, [ [572, 1], [286, 1], [417, 1], [58, 1], [420, 1], [109, 1], [219, 1] ],[ 3, 4, 5, 6, 7, 10, 13, 14, 15, 17, 18, 20, 21, 27, 32, 42, 44, 45, 48, 66, 68, 70, 77, 79, 85, 87, 88, 90, 97, 99, 100 ],[ 204, 180, 227, 50, 326, 175, 190, 336, 97, 95, 595, 384, 574 ]])
      # Taupiqueur d'Alola 
       list.push([50, 1, [ [28, 1], [232, 1], [45, 4], [310, 7], [189, 10], [222, 14], [473, 18], [389, 22], [426, 25], [414, 28], [91, 31], [442, 35], [89, 39], [90, 43] ],[ 1, 6, 10, 11, 17, 21, 26, 27, 32, 36, 37, 39, 40, 42, 44, 45, 46, 48, 49, 65, 78, 80, 87, 88, 90, 91, 100 ],[ 251, 29, 185, 37, 228, 246, 262, 319, 203, 560 ]])
      # Triopikeur d'Alola (606)
       list.push([51, 1, [ [606, 1], [400, 1], [161, 1], [28, 1], [232, 1], [328, 1], [45, 4], [310, 7], [189, 10], [222, 14], [473, 18], [289, 22], [426, 25], [414, 30], [91, 35], [442, 41], [89, 47], [90, 53] ],[ 1, 6, 10, 11, 15, 17, 21, 26, 27, 32, 34, 36, 37, 39, 40, 42, 44, 45, 46, 48, 49, 65, 68, 71, 78, 80, 87, 88, 90, 91, 100 ],[ 251, 29, 185, 37, 228, 246, 262, 319, 203, 560 ]])
      # Miaouss d'Alola (591)
       list.push([52, 1, [ [10, 1], [45, 1], [44, 6], [252, 9], [154, 14], [103, 17], [185, 22], [269, 25], [6, 30], [163, 33], [417, 38], [372, 41], [445, 46], [400, 49], [364, 50], [399, 55] ],[ 1, 6, 10, 11, 12, 17, 18, 21, 24, 25, 27, 30, 32, 40, 41, 42, 44, 45, 46, 48, 49, 60, 63, 65, 66, 77, 85, 87, 88, 89, 90, 97, 100 ],[ 133, 274, 204, 180, 591, 260, 175, 95, 343, 386, 289, 554 ]])
      # Percian d'Alola (575, 591)
       list.push([53, 1, [ [541, 1], [575, 1], [415, 1], [10, 1], [45, 1], [129, 1], [44, 6], [252, 9], [154, 14], [103, 17], [185, 22], [269, 25], [408, 32], [163, 37], [417, 44], [372, 49], [445, 56], [400, 61], [364, 65], [399, 69] ],[ 1, 5, 6, 10, 11, 12, 15, 17, 18, 21, 24, 25, 27, 30, 32, 40, 41, 42, 44, 45, 46, 48, 49, 60, 63, 65, 66, 68, 77, 85, 87, 88, 89, 90, 95, 97, 100],[ 133, 274, 204, 180, 591, 260, 175, 95, 343, 386, 289, 554 ]])
      # Racaillou d'Alola
       list.push([74, 1, [ [33, 1], [111, 1], [268, 4], [397, 6], [205, 10], [209, 12], [88, 16], [496, 18], [9, 22], [120, 24], [446, 28], [350, 30], [435, 34], [153, 36], [38, 40], [444, 42] ],[ 6, 10, 11, 17, 21, 23, 24, 25, 26, 27, 31, 32, 35, 37, 38, 39, 42, 44, 45, 48, 56, 57, 59, 64, 69, 71, 72, 74, 78, 80, 87, 88, 90, 96, 100 ],[ 534, 335, 431, 175, 520, 103, 174, 68, 203, 393 ]])
      # Gravalanch d'Alola
       list.push([75, 1, [ [33, 1], [111, 1], [268, 4], [397, 6], [205, 10], [209, 12], [88, 16], [496, 18], [9, 22], [120, 24], [446, 30], [350, 34], [435, 40], [153, 44], [38, 50], [444, 54] ],[ 6, 10, 11, 17, 21, 23, 24, 25, 26, 27, 31, 32, 35, 37, 38, 39, 42, 44, 45, 48, 56, 57, 59, 64, 69, 71, 72, 74, 78, 80, 87, 88, 90, 96, 100 ],[ 534, 335, 431, 175, 520, 103, 174, 68, 203, 393 ]])
      # Grolem d'Alola
       list.push([76, 1, [ [475, 1], [33, 1], [111, 1], [268, 4], [397, 6], [542, 10], [209, 12], [88, 16], [496, 18], [9, 22], [120, 24], [446, 30], [435, 40], [153, 44], [38, 50], [444, 54], [475, 60] ],[ 5, 6, 10, 11, 15, 17, 21, 23, 24, 25, 26, 27, 31, 32, 35, 37, 38, 39, 42, 44, 45, 48, 49, 52, 56, 57, 59, 64, 68, 69, 71, 72, 74, 78, 80, 87, 88, 90, 93, 96, 100 ],[ 534, 335, 431, 175, 520, 103, 174, 68, 203, 393 ]])
      # Tadmorv d'Alola (603, 567)
       list.push([88, 1, [ [1, 1], [139, 1], [106, 4], [44, 7], [50, 12], [474, 15], [305, 18], [107, 21], [374, 26], [282, 29], [242, 32], [103, 37], [441, 40], [151, 43], [603, 46], [262, 48] ],[ 6, 9, 10, 11, 12, 17, 18, 21, 27, 30, 32, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 48, 56, 59, 60, 63, 64, 66, 69, 71, 80, 83, 84, 87, 88, 90, 95, 100 ],[ 372, 256, 497, 180, 184, 174, 425, 286, 228, 255, 212, 254, 567 ]])
      # Grotadmorv d'Alola (586, 603, 567)
       list.push([89, 1, [ [1, 1], [139, 1], [586, 1], [106, 1], [106, 4], [44, 7], [50, 12], [474, 15], [305, 18], [107, 21], [374, 26], [282, 29], [242, 32], [103, 37], [441, 40], [151, 46], [603, 52] ],[ 6, 9, 10, 11, 12, 17, 18, 21, 27, 30, 32, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 48, 56, 59, 60, 63, 64, 66, 69, 71, 80, 83, 84, 87, 88, 90, 95, 97, 100 ],[ 372, 256, 497, 180, 184, 174, 425, 286, 228, 255, 212, 254, 567 ]])
      # Noadkoko d'Alola (635, 589)
       list.push([103, 1, [ [140, 1], [95, 1], [93, 1], [635, 1], [486, 17], [121, 27], [452, 37], [437, 47] ],[ 3, 6, 10, 11, 15, 16, 17, 21, 22, 26, 27, 29, 31, 32, 33, 35, 36, 42, 44, 45, 46, 48, 53, 59, 64, 68, 75, 77, 78, 82, 83, 85, 86, 87, 88, 90, 92, 96, 100 ],[ 381, 335, 589, 363, 285, 267, 202, 174, 384, 246, 275, 236, 235, 437 ]])
      # Ossatueur d'Alola (653, 663)
       list.push([105, 1, [ [45, 1], [39, 1], [125, 1], [172, 1], [39, 3], [125, 7], [172, 11], [43, 13], [485, 17], [155, 21], [261, 23], [653, 27], [37, 33], [374, 37], [663, 43], [283, 49], [394, 53], [557, 59], [198, 65] ],[ 6, 10, 11, 13, 14, 15, 17, 18, 21, 23, 24, 25, 26, 27, 30, 31, 32, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 52, 54, 56, 59, 61, 68, 71, 75, 78, 80, 85, 87, 88, 90, 97, 100 ],[ 532, 187, 130, 197, 24, 103, 174, 246, 195, 203, 442 ]])
       
      #-----------------------------
      # Autres movepool alternatifs
      #-----------------------------

      # Deoxys Forme Attaque
        list.push([386, 1, [ [43, 1], [35, 1], [101, 7], [100, 13], [269, 19], [228, 25], [94, 31], [276, 37], [375, 43], [428, 49], [322, 55], [192, 61], [354, 67], [63, 73] ],[ 3, 4, 6, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 25, 27, 29, 30, 31, 32, 33, 39, 40, 41, 42, 44, 47, 48, 52, 53, 56, 57, 59, 68, 73, 77, 80, 84, 85, 86, 87, 88, 90, 91, 92, 97, 100 ],[ nil ]])
      # Deoxys Forme Défense
       list.push([386, 2, [ [43, 1], [35, 1], [101, 7], [100, 13], [282, 19], [191, 25], [94, 31], [289, 37], [375, 43], [428, 49], [334, 55], [133, 55], [105, 61], [354, 67], [68, 73], [243, 73] ],[ 3, 4, 6, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 25, 27, 29, 30, 31, 32, 33, 39, 40, 41, 42, 44, 47, 48, 52, 53, 56, 57, 59, 68, 73, 77, 80, 84, 85, 86, 87, 88, 90, 91, 92, 97, 100 ],[ nil ]])
      # Deoxys Forme Vitesse
       list.push([386, 3, [ [43, 1], [35, 1], [101, 7], [104, 13], [282, 19], [228, 25], [94, 31], [129, 37], [375, 43], [428, 49], [97, 55], [105, 61], [354, 67], [245, 73] ],[ 3, 4, 6, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 25, 27, 29, 30, 31, 32, 33, 39, 40, 41, 42, 44, 47, 48, 52, 53, 56, 57, 59, 68, 73, 77, 80, 84, 85, 86, 87, 88, 90, 91, 92, 97, 100 ],[ nil ]])
      # Cheniselle Cap Sable
       list.push([413, 1, [ [531, 1], [389, 1], [33, 1], [182, 1], [450, 1], [182, 10], [450, 15], [237, 20], [93, 23], [350, 26], [106, 29], [60, 32], [445, 35], [175, 38], [213, 41], [94, 44], [90, 47], [405, 50] ],[ 6, 9, 10, 11, 15, 17, 18, 20, 21, 26, 27, 29, 30, 32, 37, 39, 42, 44, 45, 46, 48, 68, 77, 78, 83, 85, 87, 88, 90, 100 ],[ nil ]])
      # Cheniselle Cap Déchet
       list.push([413, 2, [ [531, 1], [368, 1], [389, 1], [33, 1], [182, 1], [450, 1], [182, 10], [450, 15], [237, 20], [93, 23], [429, 26], [319, 29], [60, 32], [445, 35], [175, 38], [213, 41], [94, 44], [442, 47], [405, 50] ],[ 6, 9, 10, 11, 15, 17, 18, 20, 21, 27, 29, 30, 32, 42, 44, 45, 46, 48, 68, 74, 77, 83, 85, 87, 88, 90, 91, 100 ],[ nil ]])
      # Shaymin forme céleste
       list.push([492, 1, [ [74, 1], [345, 10], [73, 19], [98, 28], [230, 37], [363, 46], [388, 55], [403, 64], [412, 73], [186, 82], [437, 91], [465, 100] ],[ 6, 10, 11, 15, 17, 20, 21, 22, 27, 29, 32, 42, 44, 48, 53, 68, 75, 77, 86, 87, 88, 90, 96, 99, 100 ],[ nil ]])
      # Kyurem Blanc (600)
       list.push([646, 1, [ [196, 1], [82, 1], [286, 8], [246, 15], [58, 22], [225, 29], [400, 36], [494, 43], [489, 50], [406, 57], [600, 64], [283, 71], [59, 78], [200, 85], [304, 92] ],[ 2, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 29, 30, 32, 33, 39, 42, 44, 48, 49, 51, 52, 56, 59, 65, 66, 68, 71, 76, 80, 82, 87, 88, 90, 91, 100 ],[ nil ]])
      # Kyurem Noir (600)
       list.push([646, 2, [ [196, 1], [82, 1], [286, 8], [246, 15], [58, 22], [225, 29], [163, 36], [495, 43], [537, 50], [406, 57], [600, 64], [283, 71], [59, 78], [200, 85], [304, 92] ],[ 2, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 29, 30, 32, 33, 39, 42, 44, 48, 49, 51, 52, 56, 59, 65, 66, 68, 71, 76, 80, 82, 87, 88, 90, 91, 100 ],[ nil ]])
      # Lougaroc forme nocturne
       list.push([745, 1, [ [68, 1], [179, 1], [269, 1], [33, 1], [43, 1], [28, 4], [44, 7], [336, 12], [88, 15], [316, 18], [317, 23], [46, 26], [446, 29], [157, 34], [184, 37], [242, 40], [431, 45], [444, 48] ],[ 5, 6, 8, 10, 12, 17, 21, 27, 31, 32, 39, 42, 44, 45, 48, 49, 69, 71, 75, 80, 87, 88, 90, 95, 100 ],[ 422, 424, 389, 306, 37 ]])
      # Lougaroc forme crépusculaire (665)
       list.push([745, 2, [ [37, 1], [68, 1], [665, 1], [33, 1], [43, 1], [28, 4], [44, 7], [336, 12], [88, 15], [316, 18], [317, 23], [46, 26], [446, 29], [157, 34], [184, 37], [242, 40], [431, 45], [444, 48] ],[ 5, 6, 8, 10, 12, 17, 21, 27, 31, 32, 39, 42, 44, 45, 48, 49, 69, 71, 75, 80, 87, 88, 90, 95, 100 ],[ 422, 424, 389, 306, 37 ]])
      # Salarsen forme grave (607, 603, 648, 571, 600, 586, 585, 563, 567)
       list.push([849, 1, [ [209, 1], [607, 1], [603, 1], [648, 1], [571, 1], [45, 1], [175, 1], [51, 1], [84, 1], [474, 1], [43, 1], [600, 1], [268, 4], [351, 8], [184, 12], [269, 16], [586, 20], [103, 24], [207, 28], [92, 32], [435, 36], [398, 40], [585, 48], [563, 52] ],[ nil ],[ 283, 319, 567 ]])
      # Shifours style mille poing
       list.push([892, 1, [ [453, 1], [249, 1], [43, 1], [203, 1], [116, 1], [332, 12], [184, 16], [29, 20], [280, 24], [197, 28], [339, 32], [442, 36], [223, 40], [68, 44], [370, 48], [264, 52] ],[ nil ],[ nil ]])
       
      #-----------------
      # Formes exemples
      #-----------------

      # Script de base
      # list.push([ID, FORME, [ PAR_NIV ],[ CT ],[ REPRODUCTION ]])
      # Script de base avec niveaux avec X = niveau d'apprentissage, Y = ID de l'attaque
      # list.push([ID, FORME, [ [X, Y], [X, Y], [X, Y] ],[ CT ],[ REPRODUCTION ]])
      # Bulbizarre forme 1 apprend "POING COMETE" et "POING-KARATE" au départ et "POINGLACE" au lvl 10
      # list.push([1, 1, [ [4, 1], [2, 1], [8, 10] ],[ nil ],[ nil ]])
      # Dracaufeu forme 3 apprend les CT24-TONNERRE, CT25-FATAL-FOUDRE et CS07-CASCADE (Les [CS] entre crochets)
      # list.push([6, 3, [ nil ],[ 24, 25, [7] ],[ nil ]])
      # Carapuce forme 1 apprend ULTIMAWASHI et PIED SAUTE par reproduction.
      # list.push([7, 1, [ nil ],[ nil],[ 25, 26 ]])
      #---------------------------------------------------
      return list
    end
     
       
     
    def alt_movepool_test
      list = alt_movepool_list
      b = []
      for i in list
        return true if (i[0] == @id or i[0] == @name) and i[1] == @form
      end
       
      return false
    end
      
     
    def alt_movepool(erase = false)
       
      list = alt_movepool_list
      reprod = []
      skills = []
      ct = []
      if list != []
        list.each do |i|
          if (i[0] == @id or i[0] == @name) and i[1] == @form
            next if i[2] == nil
            i[2].each do |skill|
              next if skill == nil
              if skill[0].type == Fixnum
                skills.push(skill)
              else
                skills.push([Skill_Info.id(skill[0]), skill[1]])
              end
            end
            next if i[3] == nil
            i[3].each do |skill|
              next if skill == nil
              ct.push(skill)
            end
            next if i[4] == nil
            i[4].each do |skill|
              next if skill == nil
              if skill.type == Fixnum
                reprod.push(skill)
              else
                reprod.push(Skill_Info.id(skill))
              end
            end
          end
        end
      end
       
      if ct != [nil]
        @skills_allow = ct
      end
 
      if skills != [nil] and skills != []
        @skills_table = skills
        return if erase == false
        @skills_set = []
        initialize_skill
      end
    end
     
     
    def skills_allow
      return @skills_allow if alt_movepool_test
      return Pokemon_Info.skills_tech(id)
    end
     
     
    def breed_move
      return @breed_move if alt_movepool_test
      return Pokemon_Info.breed_move(id)
    end
     
    def refresh_skill(backscene = nil)
      alt_movepool
      for skill in @skills_table
        if skill[1] == @level and not(skill_learnt?(skill[0]))
          scene = Pokemon_Skill_Learn.new(self, skill[0], backscene)
          scene.main
        end
      end
    end
     
  end
end